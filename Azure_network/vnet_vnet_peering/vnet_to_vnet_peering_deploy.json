{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location of the resources"
            }
        },
        "vnet1Name": {
            "type": "string",
            "defaultValue": "techademyvnet1",
            "metadata": {
                "description": "Name of the VNet1"
            }
        },
        "vnet2Name": {
            "type": "string",
            "defaultValue": "techademyvnet2",
            "metadata": {
                "description": "Name for VNet 2"
            }
        }
    },
    "functions": [],
    "variables": {
        "vnet1config": {
            "addressSpacePrefix": "10.1.0.0/24",
            "subnetName": "techademysubnet1",
            "subnetPrefix": "10.1.1.0/24"
        },
        "vnet2Config": {
            "addressSpacePrefix": "192.168.0.0/24",
            "subnetName": "techademysubnet1",
            "subnetPrefix": "192.168.0.0/24"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('vnet1Name')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet1config').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet1config').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vnet1config').subnetPrefix]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-11-01",
            "name": "[format('{0}/{1}',parameters('vnet1Name'),format('{0}-{1})',parameters('vnet1Name'),parameters('vnet2Name')))]",
            "properties":{
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet2Name'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnet1Name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet2Name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('vnet2Name')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet2Config').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnet2Config').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vnet2Config').subnetPrefix]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-11-01",
            "name": "[format('{0}/{1}',parameters('vnet2Name'),format('{0}-{1}',parameters('vnet2Name'),parameters('vnet1Name')))]",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnet1Name'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnet1Name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnet2Name'))]"
            ]
        }
    ],
    "outputs": {}
}